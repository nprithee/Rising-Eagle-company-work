library(ggplot2)
df <- read_csv('/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv')
# Get unique values from the "Type" column
unique_types <- unique(df$Type)
# Print each unique type
for (type in unique_types) {
print("Product Type:", type)
}
library(readr)
library(ggplot2)
df <- read_csv('/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase History with Average Unit Price - 2021 vs. 2022.csv')
# Get unique values from the "Type" column
unique_types <- unique(df$Type)
# Print each unique type
for (type in unique_types) {
print("Product Type:", type)
}
library(readr)
library(ggplot2)
df <- read_csv('/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase History with Average Unit Price - 2021 vs. 2022.csv')
columns_to_drop <- c("Type", "Qty Sold 01/01/22 to 12/31/22", "Sales $$ 01/01/22 to 12/31/22", "Qty Sold 01/01/21 to 12/31/21", "Sales $$ 01/01/21 to 12/31/21")
df <- df[, !(names(df) %in% columns_to_drop)]
# Convert the average unit price columns from strings to numeric values
df$`Average Unit Price 01/01/22 to 12/31/22` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/22 to 12/31/22`))
df$`Average Unit Price 01/01/21 to 12/31/21` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/21 to 12/31/21`))
# Calculate the percentage change
df$`Percentage Change` <- ((df$`Average Unit Price 01/01/22 to 12/31/22` - df$`Average Unit Price 01/01/21 to 12/31/21`) / df$`Average Unit Price 01/01/21 to 12/31/21`) * 100
# Create a bar chart
ggplot(df, aes(x = `Item #`, y = `Percentage Change`)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Item #", y = "Percentage Change", title = "Percentage Change of Average Unit Price (2021 to 2022)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_text(aes(label = sprintf("%.1f%%", `Percentage Change`)), vjust = -0.5, size = 3) +
coord_cartesian(clip = "off") +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
library(readr)
library(ggplot2)
df <- read_csv('/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv')
columns_to_drop <- c("Type", "Qty Sold 01/01/21 to 12/31/21", "Sales $$ 01/01/21 to 12/31/21", "Qty Sold 01/01/20 to 12/31/20", "Sales $$ 01/01/20 to 12/31/20")
df <- df[, !(names(df) %in% columns_to_drop)]
# Convert the average unit price columns from strings to numeric values
df$`Average Unit Price 01/01/21 to 12/31/21` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/21 to 12/31/21`))
df$`Average Unit Price 01/01/20 to 12/31/20` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/20 to 12/31/20`))
# Calculate the percentage change
df$`Percentage Change` <- ((df$`Average Unit Price 01/01/21 to 12/31/21` - df$`Average Unit Price 01/01/20 to 12/31/20`) / df$`Average Unit Price 01/01/20 to 12/31/20`) * 100
# Create a bar chart
ggplot(df, aes(x = `Item #`, y = `Percentage Change`)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Item #", y = "Percentage Change", title = "Percentage Change of Average Unit Price (2020 to 2021)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_text(aes(label = sprintf("%.1f%%", `Percentage Change`)), vjust = -0.5, size = 3) +
coord_cartesian(clip = "off") +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
library(readr)
library(ggplot2)
df <- read_csv('/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv')
columns_to_drop <- c("Type", "Qty Sold 01/01/21 to 12/31/21", "Sales $$ 01/01/21 to 12/31/21", "Qty Sold 01/01/20 to 12/31/20", "Sales $$ 01/01/20 to 12/31/20")
df <- df[, !(names(df) %in% columns_to_drop)]
# Convert the average unit price columns from strings to numeric values
df$`Average Unit Price 01/01/21 to 12/31/21` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/21 to 12/31/21`))
df$`Average Unit Price 01/01/20 to 12/31/20` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/20 to 12/31/20`))
# Calculate the percentage change
df$`Percentage Change` <- ((df$`Average Unit Price 01/01/21 to 12/31/21` - df$`Average Unit Price 01/01/20 to 12/31/20`) / df$`Average Unit Price 01/01/20 to 12/31/20`) * 100
# Create a bar chart
ggplot(df, aes(x = `Item #`, y = `Percentage Change`)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Item #", y = "Percentage Change", title = "Percentage Change of Average Unit Price (2020 to 2021)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_text(aes(label = sprintf("%.1f%%", `Percentage Change`)), vjust = -0.5, size = 3) +
coord_cartesian(clip = "off") +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
library(readr)
library(ggplot2)
df <- read_csv('/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv')
library(readr)
library(ggplot2)
df <- read_csv('/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv')
# Get unique values from the "Type" column
unique_types <- unique(df$Type)
# Print each unique type
for (type in unique_types) {
print("Product Type:", type)
}
# Get unique values from the "Type" column
unique_types <- unique(df$Type)
# Print each unique type
for (type in unique_types) {
print(paste("Product Type:", as.character(type)))
}
library(readr)
library(ggplot2)
# Read the CSV file and drop unnecessary columns
df <- read_csv("/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv") %>%
select(-Type, -`Qty Sold 01/01/21 to 12/31/21`, -`Sales $$ 01/01/21 to 12/31/21`, -`Qty Sold 01/01/20 to 12/31/20`, -`Sales $$ 01/01/20 to 12/31/20`)
library(readr)
library(ggplot2)
# Read the CSV file and drop unnecessary columns
df <- read_csv("/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv")
select(-Type, -`Qty Sold 01/01/21 to 12/31/21`, -`Sales $$ 01/01/21 to 12/31/21`, -`Qty Sold 01/01/20 to 12/31/20`, -`Sales $$ 01/01/20 to 12/31/20`)
library(readr)
library(ggplot2)
df <- read_csv('/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase History with Average Unit Price - 2021 vs. 2022.csv')
# Get unique values from the "Type" column
unique_types <- unique(df$Type)
# Print each unique type
for (type in unique_types) {
print(paste("Product Type:", as.character(type)))
}
columns_to_drop <- c("Type", "Qty Sold 01/01/22 to 12/31/22", "Sales $$ 01/01/22 to 12/31/22", "Qty Sold 01/01/21 to 12/31/21", "Sales $$ 01/01/21 to 12/31/21")
df <- df[, !(names(df) %in% columns_to_drop)]
# Convert the average unit price columns from strings to numeric values
df$`Average Unit Price 01/01/22 to 12/31/22` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/22 to 12/31/22`))
df$`Average Unit Price 01/01/21 to 12/31/21` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/21 to 12/31/21`))
# Calculate the percentage change
df$`Percentage Change` <- ((df$`Average Unit Price 01/01/22 to 12/31/22` - df$`Average Unit Price 01/01/21 to 12/31/21`) / df$`Average Unit Price 01/01/21 to 12/31/21`) * 100
# Create a bar chart
ggplot(df, aes(x = `Item #`, y = `Percentage Change`)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Item #", y = "Percentage Change", title = "Percentage Change of Average Unit Price (2021 to 2022)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_text(aes(label = sprintf("%.1f%%", `Percentage Change`)), vjust = -0.5, size = 3) +
coord_cartesian(clip = "off") +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
library(readr)
library(ggplot2)
# Read the CSV file and drop unnecessary columns
df <- read_csv("/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv")
select(Type, `Qty Sold 01/01/21 to 12/31/21`, `Sales $$ 01/01/21 to 12/31/21`, `Qty Sold 01/01/20 to 12/31/20`, `Sales $$ 01/01/20 to 12/31/20`)
library(readr)
library(ggplot2)
library(dplyr)
# Read the CSV file and drop unnecessary columns
df <- read_csv("/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv") %>%
dplyr::select(-Type, -`Qty Sold 01/01/21 to 12/31/21`, -`Sales $$ 01/01/21 to 12/31/21`, -`Qty Sold 01/01/20 to 12/31/20`, -`Sales $$ 01/01/20 to 12/31/20`)
# Convert the average unit price columns from strings to numeric values
df$`Average Unit Price 01/01/21 to 12/31/21` <- readr::parse_number(df$`Average Unit Price 01/01/21 to 12/31/21`)
df$`Average Unit Price 01/01/20 to 12/31/20` <- readr::parse_number(df$`Average Unit Price 01/01/20 to 12/31/20`)
# Calculate the percentage change of the average unit price
df$`Percentage Change` <- ((df$`Average Unit Price 01/01/21 to 12/31/21` - df$`Average Unit Price 01/01/20 to 12/31/20`) / df$`Average Unit Price 01/01/20 to 12/31/20`) * 100
# Sort the dataframe by percentage change in descending order
df <- df[order(-df$`Percentage Change`), ]
# Create a line plot for each item separately
for (i in 1:nrow(df)) {
item <- df[i, "Item #"]
description <- df[i, "Description"]
percentage_change <- df[i, "Percentage Change"]
# Create a new plot for each item
plot <- ggplot(df[i, ], aes(x = 1:2, y = c(`Average Unit Price 01/01/20 to 12/31/20`, `Average Unit Price 01/01/21 to 12/31/21`))) +
geom_line() +
labs(x = "Year", y = "Average Unit Price", title = paste("Average Unit Price Trend for", description)) +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
# Add the percentage change as the footer
plot <- plot + annotate("text", x = 2, y = max(df[i, c(`Average Unit Price 01/01/20 to 12/31/20`, `Average Unit Price 01/01/21 to 12/31/21`)]),
label = paste("Percentage Change:", percentage_change, "%"), hjust = 1, vjust = -0.5)
# Display the plot
print(plot)
}
library(readr)
library(ggplot2)
library(dplyr)
# Read the CSV file and drop unnecessary columns
df <- read_csv("/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv") %>%
dplyr::select(-Type, -`Qty Sold 01/01/21 to 12/31/21`, -`Sales $$ 01/01/21 to 12/31/21`, -`Qty Sold 01/01/20 to 12/31/20`, -`Sales $$ 01/01/20 to 12/31/20`)
# Convert the average unit price columns from strings to numeric values
df$`Average Unit Price 01/01/21 to 12/31/21` <- readr::parse_number(df$`Average Unit Price 01/01/21 to 12/31/21`)
df$`Average Unit Price 01/01/20 to 12/31/20` <- readr::parse_number(df$`Average Unit Price 01/01/20 to 12/31/20`)
# Calculate the percentage change of the average unit price
df$`Percentage Change` <- ((df$`Average Unit Price 01/01/21 to 12/31/21` - df$`Average Unit Price 01/01/20 to 12/31/20`) / df$`Average Unit Price 01/01/20 to 12/31/20`) * 100
# Sort the dataframe by percentage change in descending order
df <- df[order(-df$`Percentage Change`), ]
# Create a line plot for each item separately
for (i in 1:nrow(df)) {
item <- df[i, "Item #"]
description <- df[i, "Description"]
percentage_change <- df[i, "Percentage Change"]
# Create a new plot for each item
plot <- ggplot(df[i, ], aes(x = 1:2, y = c(`Average Unit Price 01/01/20 to 12/31/20`, `Average Unit Price 01/01/21 to 12/31/21`))) +
geom_line() +
labs(x = "Year", y = "Average Unit Price", title = paste("Average Unit Price Trend for", description)) +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
# Add the percentage change as the footer
plot <- plot + annotate("text", x = 2, y = max(df[i, c("Average Unit Price 01/01/20 to 12/31/20", "Average Unit Price 01/01/21 to 12/31/21")]),
label = paste("Percentage Change:", percentage_change, "%"), hjust = 1, vjust = -0.5)
# Display the plot
print(plot)
}
library(readr)
library(ggplot2)
library(dplyr)
# Read the CSV file and drop unnecessary columns
df <- read_csv("/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv") %>%
dplyr::select(-Type, -`Qty Sold 01/01/21 to 12/31/21`, -`Sales $$ 01/01/21 to 12/31/21`, -`Qty Sold 01/01/20 to 12/31/20`, -`Sales $$ 01/01/20 to 12/31/20`)
# Convert the average unit price columns from strings to numeric values
df$`Average Unit Price 01/01/21 to 12/31/21` <- readr::parse_number(df$`Average Unit Price 01/01/21 to 12/31/21`)
df$`Average Unit Price 01/01/20 to 12/31/20` <- readr::parse_number(df$`Average Unit Price 01/01/20 to 12/31/20`)
# Calculate the percentage change of the average unit price
df$`Percentage Change` <- ((df$`Average Unit Price 01/01/21 to 12/31/21` - df$`Average Unit Price 01/01/20 to 12/31/20`) / df$`Average Unit Price 01/01/20 to 12/31/20`) * 100
# Sort the dataframe by percentage change in descending order
df <- df[order(-df$`Percentage Change`), ]
# Create a line plot for each item separately
for (i in 1:nrow(df)) {
item <- df[i, "Item #"]
description <- df[i, "Description"]
percentage_change <- df[i, "Percentage Change"]
# Create a new plot for each item
plot <- ggplot(df[i, ], aes(x = c("2020", "2021"), y = c(`Average Unit Price 01/01/20 to 12/31/20`, `Average Unit Price 01/01/21 to 12/31/21`))) +
geom_line() +
labs(x = "Year", y = "Average Unit Price", title = paste("Average Unit Price Trend for", description)) +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
# Add the percentage change as the footer
plot <- plot + annotate("text", x = "2021", y = max(df[i, c("Average Unit Price 01/01/20 to 12/31/20", "Average Unit Price 01/01/21 to 12/31/21")]),
label = paste("Percentage Change:", percentage_change, "%"), hjust = 1, vjust = -0.5)
# Display the plot
print(plot)
}
library(readr)
library(ggplot2)
df <- read_csv('/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv')
# Get unique values from the "Type" column
unique_types <- unique(df$Type)
# Print each unique type
for (type in unique_types) {
print(paste("Product Type:", as.character(type)))
}
columns_to_drop <- c("Type", "Qty Sold 01/01/21 to 12/31/21", "Sales $$ 01/01/21 to 12/31/21", "Qty Sold 01/01/20 to 12/31/20", "Sales $$ 01/01/20 to 12/31/20")
df <- df[, !(names(df) %in% columns_to_drop)]
# Convert the average unit price columns from strings to numeric values
df$`Average Unit Price 01/01/21 to 12/31/21` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/21 to 12/31/21`))
df$`Average Unit Price 01/01/20 to 12/31/20` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/20 to 12/31/20`))
# Calculate the percentage change
df$`Percentage Change` <- ((df$`Average Unit Price 01/01/21 to 12/31/21` - df$`Average Unit Price 01/01/20 to 12/31/20`) / df$`Average Unit Price 01/01/20 to 12/31/20`) * 100
# Create a bar chart
ggplot(df, aes(x = `Item #`, y = `Percentage Change`)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Item #", y = "Percentage Change", title = "Percentage Change of Average Unit Price (2020 to 2021)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_text(aes(label = sprintf("%.1f%%", `Percentage Change`)), vjust = -0.5, size = 3) +
coord_cartesian(clip = "off") +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
library(readr)
library(ggplot2)
df <- read_csv('/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase History with Average Unit Price - 2021 vs. 2022.csv')
columns_to_drop <- c("Type", "Qty Sold 01/01/22 to 12/31/22", "Sales $$ 01/01/22 to 12/31/22", "Qty Sold 01/01/21 to 12/31/21", "Sales $$ 01/01/21 to 12/31/21")
df <- df[, !(names(df) %in% columns_to_drop)]
# Convert the average unit price columns from strings to numeric values
df$`Average Unit Price 01/01/22 to 12/31/22` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/22 to 12/31/22`))
df$`Average Unit Price 01/01/21 to 12/31/21` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/21 to 12/31/21`))
# Calculate the percentage change
df$`Percentage Change` <- ((df$`Average Unit Price 01/01/22 to 12/31/22` - df$`Average Unit Price 01/01/21 to 12/31/21`) / df$`Average Unit Price 01/01/21 to 12/31/21`) * 100
# Create a bar chart
ggplot(df, aes(x = `Item #`, y = `Percentage Change`)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Item #", y = "Percentage Change", title = "Percentage Change of Average Unit Price (2021 to 2022)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_text(aes(label = sprintf("%.1f%%", `Percentage Change`)), vjust = -0.5, size = 3) +
coord_cartesian(clip = "off") +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(reshape2)
# Read the CSV file
df <- read.csv('/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv')
# 2. Data Preprocessing
# Clean up column names
colnames(df) <- trimws(colnames(df))
# 3. Calculate Percentage Change
df$Percentage_Change <- ((df$`Qty Sold 01/01/21 to 12/31/21` - df$`Qty Sold 01/01/20 to 12/31/20`) / df$`Qty Sold 01/01/20 to 12/31/20`) * 100
library(ggplot2)
library(reshape2)
# Read the CSV file
df <- read.csv('/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv', header = TRUE)
# 2. Data Preprocessing
# Clean up column names
colnames(df) <- trimws(colnames(df))
# 3. Calculate Percentage Change
df$Percentage_Change <- ((df$`Qty Sold 01/01/21 to 12/31/21` - df$`Qty Sold 01/01/20 to 12/31/20`) / df$`Qty Sold 01/01/20 to 12/31/20`) * 100
library(ggplot2)
library(reshape2)
# Read the CSV file
df <- read.csv('/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv', header = TRUE)
# 2. Data Preprocessing
# Clean up column names
colnames(df) <- trimws(colnames(df))
# 3. Calculate Percentage Change
# Convert the average unit price columns from strings to numeric values
df$`Average Unit Price 01/01/21 to 12/31/21` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/21 to 12/31/21`))
library(ggplot2)
library(reshape2)
# Read the CSV file
df <- read.csv('/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv', header = TRUE)
# 3. Calculate Percentage Change
# Convert the average unit price columns from strings to numeric values
df$`Average Unit Price 01/01/21 to 12/31/21` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/21 to 12/31/21`))
library(readr)
library(ggplot2)
df <- read_csv('/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv')
# Get unique values from the "Type" column
unique_types <- unique(df$Type)
# Print each unique type
for (type in unique_types) {
print(paste("Product Type:", as.character(type)))
}
# Get unique values from the "Type" column
unique_types <- unique(df$Type)
# Print each unique type
for (type in unique_types) {
print(paste("Product Type:", as.character(type)))
}
columns_to_drop <- c("Type", "Qty Sold 01/01/21 to 12/31/21", "Sales $$ 01/01/21 to 12/31/21", "Qty Sold 01/01/20 to 12/31/20", "Sales $$ 01/01/20 to 12/31/20")
df <- df[, !(names(df) %in% columns_to_drop)]
# Convert the average unit price columns from strings to numeric values
df$`Average Unit Price 01/01/21 to 12/31/21` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/21 to 12/31/21`))
df$`Average Unit Price 01/01/20 to 12/31/20` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/20 to 12/31/20`))
# Calculate the percentage change
df$`Percentage Change` <- ((df$`Average Unit Price 01/01/21 to 12/31/21` - df$`Average Unit Price 01/01/20 to 12/31/20`) / df$`Average Unit Price 01/01/20 to 12/31/20`) * 100
# Create a bar chart
ggplot(df, aes(x = `Item #`, y = `Percentage Change`)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Item #", y = "Percentage Change", title = "Percentage Change of Average Unit Price (2020 to 2021)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_text(aes(label = sprintf("%.1f%%", `Percentage Change`)), vjust = -0.5, size = 3) +
coord_cartesian(clip = "off") +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
# Heatmap of Percentage Change
pivot_table <- dcast(df, `Item #` ~ Description, value.var = "Percentage_Change")
library(readr)
library(ggplot2)
df <- read_csv('/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv')
# Get unique values from the "Type" column
unique_types <- unique(df$Type)
# Print each unique type
for (type in unique_types) {
print(paste("Product Type:", as.character(type)))
}
# Convert the average unit price columns from strings to numeric values
df$`Average Unit Price 01/01/21 to 12/31/21` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/21 to 12/31/21`))
df$`Average Unit Price 01/01/20 to 12/31/20` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/20 to 12/31/20`))
# Calculate the percentage change
df$`Percentage Change` <- ((df$`Average Unit Price 01/01/21 to 12/31/21` - df$`Average Unit Price 01/01/20 to 12/31/20`) / df$`Average Unit Price 01/01/20 to 12/31/20`) * 100
# Create a bar chart
ggplot(df, aes(x = `Item #`, y = `Percentage Change`)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Item #", y = "Percentage Change", title = "Percentage Change of Average Unit Price (2020 to 2021)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_text(aes(label = sprintf("%.1f%%", `Percentage Change`)), vjust = -0.5, size = 3) +
coord_cartesian(clip = "off") +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
# Heatmap of Percentage Change
pivot_table <- dcast(df, `Item #` ~ Description, value.var = "Percentage_Change")
#  GPCA Table
gpca_table <- aggregate(cbind(`Qty Sold 01/01/21 to 12/31/21`, `Qty Sold 01/01/20 to 12/31/20`) ~ `Item #` + Description, df, sum)
# Line Plot of Quantity Sold
ggplot(df, aes(x = `Item #`)) +
geom_line(aes(y = `Qty Sold 01/01/21 to 12/31/21`, color = "Qty Sold 2021"), marker = "o") +
geom_line(aes(y = `Qty Sold 01/01/20 to 12/31/20`, color = "Qty Sold 2020"), marker = "o") +
labs(x = "Item #", y = "Quantity Sold", title = "Quantity Sold Comparison") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_color_manual(values = c("Qty Sold 2021" = "blue", "Qty Sold 2020" = "red"))
library(reshape2)
pivot_table <- dcast(df, `Item #` ~ Description, value.var = "Percentage Change")
heatmap(as.matrix(pivot_table), col = colorRampPalette(c("red", "yellow", "green"))(12),
xlab = "Description", ylab = "Item #", main = "Heatmap of Percentage Change")
#  GPCA Table
gpca_table <- aggregate(cbind(`Qty Sold 01/01/21 to 12/31/21`, `Qty Sold 01/01/20 to 12/31/20`) ~ `Item #` + Description, df, sum)
# Line Plot of Quantity Sold
ggplot(gpca_table, aes(x = `Item #`)) +
geom_line(aes(y = `Qty Sold 01/01/21 to 12/31/21`, color = "Qty Sold 2021"), marker = "o") +
geom_line(aes(y = `Qty Sold 01/01/20 to 12/31/20`, color = "Qty Sold 2020"), marker = "o") +
labs(x = "Item #", y = "Quantity Sold", title = "Quantity Sold Comparison") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_color_manual(values = c("Qty Sold 2021" = "blue", "Qty Sold 2020" = "red"))
library(reshape2)
# Convert the pivot_table to a numeric matrix
pivot_matrix <- as.matrix(pivot_table[, -1])
# Create the Heatmap
heatmap(pivot_matrix, col = colorRampPalette(c("red", "yellow", "green"))(12),
xlab = "Description", ylab = "Item #", main = "Heatmap of Percentage Change")
library(reshape2)
# Convert the pivot_table to a numeric matrix, handling missing values
pivot_matrix <- as.matrix(pivot_table[, -1], na.rm = TRUE)
# Create the Heatmap
heatmap(pivot_matrix, col = colorRampPalette(c("red", "yellow", "green"))(12),
xlab = "Description", ylab = "Item #", main = "Heatmap of Percentage Change")
# Load the necessary library
library(ggplot2)
library(reshape2)
# Convert the average unit price columns from strings to numeric values
df$`Average Unit Price 01/01/21 to 12/31/21` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/21 to 12/31/21`))
df$`Average Unit Price 01/01/20 to 12/31/20` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/20 to 12/31/20`))
# Reshape the data to wide format
df_wide <- dcast(df, `Item #` ~ Type, value.var = "Percentage Change")
# Create a heatmap using ggplot2
heatmap_plot <- ggplot(df_wide, aes(x = `Item #`, y = Type, fill = Percentage.Change)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red", na.value = "white") +
labs(x = "Item #", y = "Type", title = "Percentage Change Heatmap") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Display the heatmap
print(heatmap_plot)
# Load the necessary libraries
library(ggplot2)
library(reshape2)
# Convert the average unit price columns from strings to numeric values
df$`Average Unit Price 01/01/21 to 12/31/21` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/21 to 12/31/21`))
df$`Average Unit Price 01/01/20 to 12/31/20` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/20 to 12/31/20`))
# Reshape the data to wide format
df_wide <- dcast(df, `Item #` ~ Type, value.var = "Percentage Change")
# Create a heatmap using ggplot2
heatmap_plot <- ggplot(df_wide, aes(x = `Item #`, y = Type, fill = Percentage.Change)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red", na.value = "white") +
labs(x = "Item #", y = "Type", title = "Percentage Change Heatmap") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Display the heatmap
print(heatmap_plot)
# Load the necessary libraries
library(FactoMineR)
# Load the necessary libraries
library(ggplot2)
library(reshape2)
# Convert the average unit price columns from strings to numeric values
df$`Average Unit Price 01/01/21 to 12/31/21` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/21 to 12/31/21`))
df$`Average Unit Price 01/01/20 to 12/31/20` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/20 to 12/31/20`))
# Reshape the data to wide format
df_wide <- dcast(df, `Item #` ~ Type, value.var = "Percentage Change")
# Create a heatmap using ggplot2
heatmap_plot <- ggplot(df_wide, aes(x = `Item #`, y = Type, fill = Percentage.Change)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red", na.value = "white") +
labs(x = "Item #", y = "Type", title = "Percentage Change Heatmap") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Display the heatmap
print(heatmap_plot)
# Load the necessary libraries
# Load the necessary libraries
library(ggplot2)
library(reshape2)
# Convert the average unit price columns from strings to numeric values
df$`Average Unit Price 01/01/21 to 12/31/21` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/21 to 12/31/21`))
df$`Average Unit Price 01/01/20 to 12/31/20` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/20 to 12/31/20`))
# Reshape the data to wide format
df_wide <- reshape2::dcast(df, `Item #` ~ Type, value.var = "Percentage Change")
# Create a heatmap using ggplot2
heatmap_plot <- ggplot(df_wide, aes(x = `Item #`, y = Type, fill = Percentage.Change)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red", na.value = "white") +
labs(x = "Item #", y = "Type", title = "Percentage Change Heatmap") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Display the heatmap in a new window
ggplot2::ggsave("heatmap.png", heatmap_plot)
library(ggplot2)
library(reshape2)
# Read the CSV file
df <- read.csv('/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv', header = TRUE)
# 3. Calculate Percentage Change
# Convert the average unit price columns from strings to numeric values
df$`Average Unit Price 01/01/21 to 12/31/21` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/21 to 12/31/21`))
library(ezids)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
df <- read_csv('/Users/nusratprithee/Documents/Rising-Eagle-company-work/Purchase-History-with-Average-Unit-Price-2020-vs.-2021.csv')
# Get unique values from the "Type" column
unique_types <- unique(df$Type)
# Print each unique type
for (type in unique_types) {
print(paste("Product Type:", as.character(type)))
}
# Convert the average unit price columns from strings to numeric values
df$`Average Unit Price 01/01/21 to 12/31/21` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/21 to 12/31/21`))
df$`Average Unit Price 01/01/20 to 12/31/20` <- as.numeric(gsub("[$,]", "", df$`Average Unit Price 01/01/20 to 12/31/20`))
# Calculate the percentage change
df$`Percentage Change` <- ((df$`Average Unit Price 01/01/21 to 12/31/21` - df$`Average Unit Price 01/01/20 to 12/31/20`) / df$`Average Unit Price 01/01/20 to 12/31/20`) * 100
# Create a bar chart
ggplot(df, aes(x = `Item #`, y = `Percentage Change`)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Item #", y = "Percentage Change", title = "Percentage Change of Average Unit Price (2020 to 2021)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_text(aes(label = sprintf("%.1f%%", `Percentage Change`)), vjust = -0.5, size = 3) +
coord_cartesian(clip = "off") +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
# Required Libraries
library(ggplot2)
library(reshape2)
# 5. Heatmap of Percentage Change
pivot_table <- dcast(df, Item # ~ Description, value.var = "Percentage Change")
heatmap <- ggplot(data = melt(pivot_table), aes(x = Description, y = Item #, fill = value)) +
# 7. GPCA Table
gpca_table <- aggregate(cbind(Qty_Sold_01_01_21_to_12_31_21, Qty_Sold_01_01_20_to_12_31_20) ~ Item.# + Description, df, sum)
# 8. Line Plot of Quantity Sold
line_plot <- ggplot(df, aes(x = Item.#)) +
library(ggplot2)
library(reshape2)
# 5. Heatmap of Percentage Change
pivot_table <- dcast(df, `Item #` ~ Description, value.var = "Percentage Change")
heatmap <- ggplot(data = melt(pivot_table), aes(x = Description, y = `Item #`, fill = value)) +
geom_tile() +
scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(11, "RdYlGn")), name = "Percentage Change") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
labs(title = "Heatmap of Percentage Change", x = "Description", y = "Item #")
print(heatmap)
# 7. GPCA Table
gpca_table <- aggregate(cbind(Qty_Sold_01_01_21_to_12_31_21, Qty_Sold_01_01_20_to_12_31_20) ~ Item.# + Description, df, sum)
# 8. Line Plot of Quantity Sold
line_plot <- ggplot(df, aes(x = Item.#)) +
# 7. GPCA Table
gpca_table <- aggregate(cbind(Qty_Sold_01_01_21_to_12_31_21, Qty_Sold_01_01_20_to_12_31_20) ~ Item.# + Description, df, sum)
# 8. Line Plot of Quantity Sold
line_plot <- ggplot(df, aes(x = `Item #`) +
